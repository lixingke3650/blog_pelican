烙饼问题求解
################

:title: 烙饼问题求解
:date: 2014-07-26 15:00
:category: 学习
:tags: 算法
:author: Hanbin

烙饼问题
========
  
**有一堆烙饼，大小不一。只用一只手抓住最上面的几块，整体颠倒，反复几次后  
即可实现排序，小在上，大在下。** -- 来自《编程之美》


求解思路
--------

首先找到最大尺寸的饼，将其翻转到最下面。为实现此目的，必须现将最大饼翻转到
顶层，然后再整体颠倒。第二次翻转时，找除底层外最大的饼，并进行同样的翻转，
数次后可实现排序。

代码
----

C代码如下，没有进行优化，时间复杂度 O(n^2).

.. code-block:: C

    #include <stdio.h>

    /******************************************/
    /* 思路： 每次寻找除底层外最大的饼，
    /* 先将其反转到最上层，然后再反转到下层正确位置
    /******************************************/


    /******************************************/
    /* 翻转
    /* @parameter 
    /*     [in/out]arr: 待排序饼序列
    /*     [in    ]l: 序列中需翻转的起点
    /*     [in    ]r: 序列中需翻转的终点
    /*     [   out]counr: 翻转次数计数
    /******************************************/
    int evertint(int* arr, int l, int r, int* count)
    {
        int i,j,tmp;
        i = l;
        j = r;

        while (j>i)
        {
            tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;

            i ++;
            j --;

            *count = *count + 1;
        }
    }

    /******************************************/
    /* 将未排序的最大饼反转到底层
    /* @parameter 
    /*     arr: 待排序饼序列
    /* @return
    /*     0: 反转完成
    /*     1: 反转失败
    /******************************************/
    int bigsort01(int* arr, int tail, int* count)
    {
        int i;
        int imax;
        int tmp;

        imax = 0;
        for(i=0;i<=tail;i++)
        {
            if (arr[imax] < arr[i])
            {
                imax = i;
            }
        }

        // 不需移动
        if (imax == tail)
        {
            return (tail-1);
        }

        // 该饼翻转到最上
        evertint(arr, 0, imax, count);

        // 该饼翻转到其正确位置
        evertint(arr, 0, tail, count);

        return (tail-1);
    }

    /******************************************/
    /* bigsort
    /* 每次找最大饼并反转到底层
    /* @return
    /*     >0: 完成 翻转次数
    /*     -1: 失败
    /******************************************/
    int bigsort(int* arr, int length)
    {
        int s;
        int count;

        count = 0;
        s = length;

        while (s>0)
        {
            s = bigsort01(arr,s,&count);
        }

        return (count);
    }

    /******************************************/
    /* main
    /******************************************/
    #define LENGTH 5
    void main()
    {
        int i;
        int count;
        int cake[LENGTH];

        // 饼尺寸赋值
        cake[0] = 2;
        cake[1] = 4;
        cake[2] = 3;
        cake[3] = 1;
        cake[4] = 5;

        count = bigsort(cake, LENGTH-1);

        for (i=0;i<LENGTH;i++)
        {
            printf("%d\r\n", cake[i]);
        }

        printf( "count: %d\r\n", count);
    }


以上。  
