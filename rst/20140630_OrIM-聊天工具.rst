OrIM - IM类软件
##################

:title: OrIM - IM类软件
:date: 2014-07-04 20:00
:category: 项目
:tags: IM, 内网穿透, P2P
:author: Hanbin

**源码托管地址： https://github.com/lixingke3650/OrIM**  
OrIM -- Python作成的IM类软件。  
  

简述  
====
  
个人学习用。  
用Python写成，基于TCP协议。  
  
现状 
====
  
通信协议
---------------

为应对socket分包粘包的问题，采用如下通信协议，  
即“包头+包体长度+包体”的形式。  

  **@ + 包体长度 + 包体**   
  
其中包体长度为四个字符。  

* 注： 暂未涉及Python中处理字节型数据的内容，  
      故包头的标识符可能并不准确。后续将加入相关处理。  

控制协议
--------
  
经通信协议解析后得到的数据格式如下：  
  
 **@ + 命令符 + 命令参数**  

有多个命令参数时以“ **;** ”区分。  

此为客户端与服务端通信的控制协议。  
系统中已定义的命令符包括：  
  
* 登录  
* 登录用户列表获取  
* 申请与指定用户会话  
* 会话应答(同意否)  
* 会话开始  
  
对应的参数分别为：  
  
* 登录ID  
* 空  
* 指定用户ID  
* 结果(0否1是) + 申请方ID  
* 会话服务器端口号+对方ID+通信认证  
  
控制与会话分离处理
--------------------
  
目前用户间会话都需要经过服务器转发，  
但服务器与用户间的控制通路与会话转发通路是分离的。  
或者说控制服务器与会话转发服务器是分离的。  
  
服务端会话对持有
--------------------
  
会话服务对每一对会话中的用户都持有一个控制实例(考虑大量用户的情况)。  
包含双方的ID与socket.  
  
客户端会话对持有
--------------------
  
客户端为每一个会话中的对象持有一个会话对。  
包含会话服务器IP,Port,对方的ID,会话认证等。  
  
流程
------
  
客户端流程：

  **登录 -> 会话请求并等待同意 -> 分配会话对实例并连接会话服务器 -> 会话开始**
  
服务端流程：  

  **等待客户端命令 -> 相关处理**

  **用户连接请求 -> 将登录用户加入用户列表**

  **登录用户列表请求 -> 回复已登录的用户列表**

  **会话请求 -> 向被申请方发送请求并等待 -> 将结果回复给请求方 -> 若同意则创建会话对等待双方加入 -> 会话开始**
  
UI
----
  
目前是命令行形式，执行结果如下图(点击查看)：  

image1_
  
待解决的问题
--------------
  
* 字节及网络传输的处理  
* UI  
* P2P通信  
  
20140704

以上。  
  
----

  
目前经服务器中转已经可以实现通信。  
开发中的功能:  

* Tcp分包，粘包处理  
* 控制协议  
* 内网穿透  
  
更新于 20140630

以上。


.. _image1: ./resource/img/OrIM-聊天工具/运行样图.png